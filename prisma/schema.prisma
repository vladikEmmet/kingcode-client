generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name         String        @unique
  prices       Price[]
  callRequests CallRequest[]
  clicks       Int?          @default(0)
}

model Price {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title            String
  description      String?
  price            String
  exercises        Int
  hours            String
  educationVariant String

  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId Int    @map("course_id")
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  authorName String? @map("author_name")
  authorImg  String? @map("author_img")
  text       String
}

model CallRequest {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  phone    String
  name     String?
  course   Course  @relation(fields: [courseId], references: [id])
  courseId Int     @map("course_id")
}

model Admin {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  login    String @unique
  password String
}

model AbousUsSlide {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  link String
  type String? @default("img")
}
